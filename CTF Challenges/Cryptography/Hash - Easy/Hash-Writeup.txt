#### Hash - Easy

*MD5: e10adc3949ba59abbe56e057f20f883e </br>
SHA1: 5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8 </br>
LM: 598DDCE2660D3193AAD3B435B51404EE </br>
(Flag format: nland{<MD5>_<SHA1>_<LM>} in all lowercase)*

</br>
The flag can be generated by brute forcing three different hashing algorithms. A hash is a digital fingerprint that uses a hash function to map data of any length to a shorter, fixed-length value. In IT security, these hashes are mostly one-way functions and offer collision resistance, making it easy to calculate a hash but almost impossible to conclude the original string. Therefore, an efficient way to decrypt the hashes is a dictionary attack, where frequently used words are hashed with the respective hashing algorithm and compared with the original. Tools like [hashcat](https://hashcat.net/hashcat/) make this process easy. We download a dictionary like [rockyou.txt](https://www.kali.org/tools/wordlists/) and use it as input for hashcat. The command looks like the following: 

```
# MD5
hashcat.exe -a 0 -m 0 hash.txt rockyou.txt
#SHA1
hashcat.exe -a 0 -m 100 hash.txt rockyou.txt
#LM
hashcat.exe -a 0 -m 3000 hash.txt rockyou.txt
```
The hash.txt file contains the hash value to be decrypted. We use the parameter *-a* to determine the dictionary mode, *-m* stands for the hash algorithm. 

<img src="https://0xffd700.com/bl-content/uploads/pages/8d3983d31ab9ba458b351d2e8dc8eaa9/hash.png" alt="">
</br>

The flag is ```nland{123456_password_qwerty}```